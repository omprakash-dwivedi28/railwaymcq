{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\project\\\\test\\\\src\\\\context\\\\GlobleState.js\";\n// import react from \"react\";\nimport GlobleContext from \"./GlobleContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [options, setOptions] = useState([]); // for zone option create a state\n\nconst GlobleState = props => {\n  // const state = {\n  // name: \"om\",\n  // class: \"MCA\",\n  const state = async () => {\n    try {\n      const response = await axios.get(\"https://railwaymcq.com/ohe/zone_division_api.php\");\n      setOptions(response.data);\n    } catch (error) {\n      console.error(\"Error fetching options:\", error);\n    }\n  };\n\n  // };\n\n  return /*#__PURE__*/_jsxDEV(GlobleContext.Provider, {\n    value: state,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = GlobleState;\nexport default GlobleState;\nvar _c;\n$RefreshReg$(_c, \"GlobleState\");","map":{"version":3,"names":["GlobleContext","jsxDEV","_jsxDEV","options","setOptions","useState","GlobleState","props","state","response","axios","get","data","error","console","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/project/test/src/context/GlobleState.js"],"sourcesContent":["// import react from \"react\";\r\nimport GlobleContext from \"./GlobleContext\";\r\n\r\nconst [options, setOptions] = useState([]); // for zone option create a state\r\n\r\nconst GlobleState = (props) => {\r\n  // const state = {\r\n  // name: \"om\",\r\n  // class: \"MCA\",\r\n  const state = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://railwaymcq.com/ohe/zone_division_api.php\"\r\n      );\r\n      setOptions(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching options:\", error);\r\n    }\r\n  };\r\n\r\n  // };\r\n\r\n  return (\r\n    <GlobleContext.Provider value={state}>\r\n      {props.children}\r\n    </GlobleContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GlobleState;\r\n"],"mappings":";AAAA;AACA,OAAOA,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;AAE5C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B;EACA;EACA;EACA,MAAMC,KAAK,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAC9B,kDACF,CAAC;MACDP,UAAU,CAACK,QAAQ,CAACG,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;;EAED;;EAEA,oBACEX,OAAA,CAACF,aAAa,CAACe,QAAQ;IAACC,KAAK,EAAER,KAAM;IAAAS,QAAA,EAClCV,KAAK,CAACU;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE7B,CAAC;AAACC,EAAA,GAtBIhB,WAAW;AAwBjB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}