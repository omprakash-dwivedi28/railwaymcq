{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\project\\\\test\\\\src\\\\Component\\\\McqPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst McqPage = () => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const questions = [{\n    id: 1,\n    question: \"What is the capital of France?\",\n    options: [\"London\", \"Paris\", \"Berlin\", \"Madrid\"],\n    correctAnswer: \"Paris\"\n  }, {\n    id: 2,\n    question: \"Which planet is known as the Red Planet?\",\n    options: [\"Mars\", \"Venus\", \"Mercury\", \"Jupiter\"],\n    correctAnswer: \"Mars\"\n  }\n  // Add more questions here\n  ];\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n  const handleNextQuestion = () => {\n    setSelectedOption(null);\n    setQuestionIndex(prevIndex => prevIndex + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mcq-container\",\n    children: questionIndex < questions.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Question \", questionIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: questions[questionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions[questionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `option ${selectedOption === option ? \"selected\" : \"\"}`,\n          onClick: () => handleOptionSelect(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        disabled: !selectedOption,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Thank you for participating.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(McqPage, \"7KnryatQMealHRxlNJz9Q5ccrxU=\");\n_c = McqPage;\nexport default McqPage;\nvar _c;\n$RefreshReg$(_c, \"McqPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","McqPage","_s","selectedOption","setSelectedOption","questionIndex","setQuestionIndex","questions","id","question","options","correctAnswer","handleOptionSelect","option","handleNextQuestion","prevIndex","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/project/test/src/Component/McqPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst McqPage = () => {\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n\r\n  const questions = [\r\n    {\r\n      id: 1,\r\n      question: \"What is the capital of France?\",\r\n      options: [\"London\", \"Paris\", \"Berlin\", \"Madrid\"],\r\n      correctAnswer: \"Paris\",\r\n    },\r\n    {\r\n      id: 2,\r\n      question: \"Which planet is known as the Red Planet?\",\r\n      options: [\"Mars\", \"Venus\", \"Mercury\", \"Jupiter\"],\r\n      correctAnswer: \"Mars\",\r\n    },\r\n    // Add more questions here\r\n  ];\r\n\r\n  const handleOptionSelect = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    setSelectedOption(null);\r\n    setQuestionIndex((prevIndex) => prevIndex + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mcq-container\">\r\n      {questionIndex < questions.length ? (\r\n        <>\r\n          <h2>Question {questionIndex + 1}</h2>\r\n          <p>{questions[questionIndex].question}</p>\r\n          <ul>\r\n            {questions[questionIndex].options.map((option, index) => (\r\n              <li\r\n                key={index}\r\n                className={`option ${\r\n                  selectedOption === option ? \"selected\" : \"\"\r\n                }`}\r\n                onClick={() => handleOptionSelect(option)}\r\n              >\r\n                {option}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button onClick={handleNextQuestion} disabled={!selectedOption}>\r\n            Next\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <div className=\"result-container\">\r\n          <h2>Quiz Completed!</h2>\r\n          <p>Thank you for participating.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default McqPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}