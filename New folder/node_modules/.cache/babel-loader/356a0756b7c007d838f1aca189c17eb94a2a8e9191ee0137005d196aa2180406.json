{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\project\\\\test\\\\src\\\\Component\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [quizData, setQuizData] = useState([]);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [score, setScore] = useState(0);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  useEffect(() => {\n    // Fetch quiz data from the API\n    const topcode = searchParams.get(\"topcode\");\n    const difficulty = searchParams.get(\"difficulty\");\n    const fetchQuizData = async () => {\n      try {\n        const response = await axios.get(`https://railwaymcq.com/student/mcq_api.php?topcode=${topcode}&difficulty=${difficulty}`);\n        setQuizData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching quiz data:\", error);\n      }\n    };\n    fetchQuizData();\n  }, [searchParams]);\n  const handleOptionSelect = (questionId, selectedOption) => {\n    setUserAnswers({\n      ...userAnswers,\n      [questionId]: selectedOption\n    });\n  };\n  const handleSubmit = () => {\n    // Calculate score based on user answers\n    let totalScore = 0;\n    quizData.forEach(question => {\n      if (userAnswers[question.id] === question.correctAnswer) {\n        totalScore++;\n      }\n    });\n    setScore(totalScore);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), quizData.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: `${question.id}_${index}`,\n            name: question.id,\n            value: option,\n            checked: userAnswers[question.id] === option,\n            onChange: () => handleOptionSelect(question.id, option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `${question.id}_${index}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"/Y0CihjqJtdXYwLY0tJ2BS4PAt8=\", false, function () {\n  return [useLocation];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","jsxDEV","_jsxDEV","Quiz","_s","quizData","setQuizData","userAnswers","setUserAnswers","score","setScore","location","searchParams","URLSearchParams","search","topcode","get","difficulty","fetchQuizData","response","data","error","console","handleOptionSelect","questionId","selectedOption","handleSubmit","totalScore","forEach","question","id","correctAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","map","options","option","index","type","name","value","checked","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/project/test/src/Component/Quiz.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction Quiz() {\r\n  const [quizData, setQuizData] = useState([]);\r\n  const [userAnswers, setUserAnswers] = useState({});\r\n  const [score, setScore] = useState(0);\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n\r\n  useEffect(() => {\r\n    // Fetch quiz data from the API\r\n    const topcode = searchParams.get(\"topcode\");\r\n    const difficulty = searchParams.get(\"difficulty\");\r\n\r\n    const fetchQuizData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://railwaymcq.com/student/mcq_api.php?topcode=${topcode}&difficulty=${difficulty}`\r\n        );\r\n        setQuizData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching quiz data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchQuizData();\r\n  }, [searchParams]);\r\n\r\n  const handleOptionSelect = (questionId, selectedOption) => {\r\n    setUserAnswers({ ...userAnswers, [questionId]: selectedOption });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Calculate score based on user answers\r\n    let totalScore = 0;\r\n    quizData.forEach((question) => {\r\n      if (userAnswers[question.id] === question.correctAnswer) {\r\n        totalScore++;\r\n      }\r\n    });\r\n    setScore(totalScore);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Quiz</h1>\r\n      {quizData.map((question) => (\r\n        <div key={question.id}>\r\n          <h3>{question.question}</h3>\r\n          <ul>\r\n            {question.options.map((option, index) => (\r\n              <li key={index}>\r\n                <input\r\n                  type=\"radio\"\r\n                  id={`${question.id}_${index}`}\r\n                  name={question.id}\r\n                  value={option}\r\n                  checked={userAnswers[question.id] === option}\r\n                  onChange={() => handleOptionSelect(question.id, option)}\r\n                />\r\n                <label htmlFor={`${question.id}_${index}`}>{option}</label>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n      <button onClick={handleSubmit}>Submit</button>\r\n      <p>Score: {score}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}