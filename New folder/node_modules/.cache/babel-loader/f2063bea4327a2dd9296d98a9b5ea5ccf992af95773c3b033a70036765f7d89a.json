{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\project\\\\test\\\\src\\\\Component\\\\FeedBack_user.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useContext } from \"react\";\n// import axios from \"axios\";\n// import \"./feedback.css\"; // Import CSS file\n// import { useInitialContext } from \"../context/InitialContext\";\n\n// // Axios Instance\n// const ai = axios.create({\n//   baseURL: \"https://railwaymcq.com/student/dbfeedback_api.php\",\n// });\n\n// export default function FeedBack_user(props) {\n//   const [formData, setFormData] = useState({\n//     zone: \"\",\n//     division: \"\",\n//     deptt: \"\",\n//     message: \"\",\n//     message_by: \"\",\n//   });\n\n//   // Call the useInitialContext hook to get access to the context values\n//   const { railwayInfo, zoneAndDivisionInfo, SetZoneAndDivision } =\n//     useInitialContext();\n\n//   const { zoneAndDivisionData } = useInitialContext();\n\n//   // Access the zone and division values from the context\n//   const { railway_zone, railway_division } = railwayInfo;\n//   console.log(railwayInfo.railway_zone);\n\n//   const [errors, setErrors] = useState({});\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n\n//     setFormData((prevState) => ({\n//       ...prevState,\n//       [name]: value,\n//     }));\n\n//     // Validate input\n//     if (name === \"name\" && value.length < 3) {\n//       setErrors({ ...errors, name: \"Name must be at least 3 characters long\" });\n//     } else if (name === \"email\" && !/\\S+@\\S+\\.\\S+/.test(value)) {\n//       setErrors({ ...errors, email: \"Invalid email address\" });\n//     } else {\n//       setErrors({ ...errors, [name]: \"\" });\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       console.log(\"Form Data:\", JSON.stringify(formData, null, 2));\n\n//       if (Object.values(errors).some((error) => error !== \"\")) {\n//         alert(\"Please fix the errors before submitting the form\");\n//         return;\n//       }\n//       const response = await axios.post(\n//         \"https://railwaymcq.com/student/dbfeedback_api.php\",\n//         formData\n//       );\n//       // const response = await ai.post(\"\", formData);\n//       console.log(\"Data added successfully:\", response.data);\n//       // Clear form fields after successful submission\n//       setFormData({\n//         zone: \"\",\n//         division: \"\",\n//         deptt: \"\",\n//         message: \"\",\n//         message_by: \"\",\n//       });\n//     } catch (error) {\n//       console.error(\"Error adding data:\", error);\n//     }\n//   };\n\n//   // for fetch data from backend start\n//   const [getFeedback, setFeedback] = useState([]);\n\n//   const getAllFeedback = async () => {\n//     try {\n//       const Feedbackdata = await ai.get(\"/Feedback/list/\");\n//       setFeedback(Feedbackdata.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const handleOptionClick = (value) => {\n//     console.log(\"Selected option:\", value);\n//     // You can add your logic here for handling the selected option\n//   };\n\n//   //use context\n\n//   <select onChange={(e) => handleZoneChange(e)} value={selectedZone}>\n//     <option value=\"\">Select Zone</option>\n//     {zoneAndDivisionData &&\n//       Object.entries(zoneAndDivisionData).map(([zone, divisions]) => (\n//         <option key={zone} value={zone}>\n//           {zone}\n//         </option>\n//       ))}\n//   </select>;\n\n//   const handleZoneChange = (e) => {\n//     const selectedZone = e.target.value;\n//     setSelectedZone(selectedZone);\n//     setSelectedDivision(\"\"); // Reset division when zone changes\n\n//     <select\n//       onChange={(e) => setSelectedDivision(e.target.value)}\n//       value={selectedDivision}\n//     >\n//       <option value=\"\">Select Division</option>\n//       {selectedZone &&\n//         zoneAndDivisionData[selectedZone].map((division) => (\n//           <option key={division} value={division}>\n//             {division}\n//           </option>\n//         ))}\n//     </select>;\n\n//     // end of useContext............\n//   };\n//   useEffect(() => {\n//     getAllFeedback();\n//   }, []);\n\n//   return (\n//     <div className=\"feedback-container\">\n//       <form onSubmit={handleSubmit}>\n//         <h6>{props.heading}</h6>\n\n//         <select\n//           className=\"form-select\"\n//           name=\"zone\"\n//           value={formData.zone}\n//           onChange={handleChange}\n//         >\n//           <option value=\"\">Please select Zone</option>\n//           <option value=\"WCR\">WCR</option>\n//           <option value=\"ECR\">ECR</option>\n//           <option value=\"NCR\">NCR</option>\n//         </select>\n\n//         <select\n//           className=\"form-select\"\n//           name=\"division\"\n//           value={formData.division}\n//           onChange={handleChange}\n//         >\n//           <option>Please select Division</option>\n//           <option value=\"JBP\">Jabalpur</option>\n//           <option value=\"KOTA\">Kota</option>\n//           <option value=\"BPL\">Bhopal</option>\n//         </select>\n\n//         <select\n//           className=\"form-select\"\n//           name=\"deptt\"\n//           value={formData.deptt}\n//           onChange={handleChange}\n//         >\n//           <option>Please select Department</option>\n//           <option value=\"GEN. ELECTRICAL\">GEN. ELECTRICAL</option>\n//           <option value=\"TRD\">TRD</option>\n//           <option value=\"TRS\">TRS</option>\n//         </select>\n//         <label htmlFor=\"mybox\" className=\"form-label\">\n//           <strong>Please feel free to leave any Feedback here</strong>\n//         </label>\n//         <textarea\n//           type=\"text\"\n//           name=\"message\"\n//           value={formData.message}\n//           onChange={handleChange}\n//           className=\"form-control\"\n//           id=\"myBox\"\n//           rows=\"4\"\n//           col=\"8\"\n//         ></textarea>\n\n//         <input\n//           type=\"text\"\n//           className=\"custom-textbox\" // Apply custom class for styling\n//           name=\"message_by\"\n//           value={formData.message_by}\n//           onChange={handleChange}\n//           placeholder=\"Enter your good name please...\"\n//           // placeholder={a.name}\n//         />\n\n//         <button type=\"submit\" className=\"btn btn-primary\">\n//           Save Feedback\n//         </button>\n//         <ul className=\"feedback-list\">\n//           <h4>Your Feedbacks</h4>\n//           {getFeedback.map((item) => (\n//             <li key={item.id}>\n//               {item.zone} - {item.division} - {item.deptt} - {item.message} -{\" \"}\n//               {item.date} -{item.message_by}\n//             </li>\n//           ))}\n//         </ul>\n//       </form>\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport \"./feedback.css\"; // Import CSS file\nimport { useInitialContext } from \"../context/InitialContext\";\n\n// Axios Instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ai = axios.create({\n  baseURL: \"https://railwaymcq.com/student/dbfeedback_api.php\"\n});\nexport default function FeedBack_user(props) {\n  _s();\n  const [formData, setFormData] = useState({\n    zone: \"\",\n    division: \"\",\n    deptt: \"\",\n    message: \"\",\n    message_by: \"\"\n  });\n  const {\n    railwayInfo,\n    zoneAndDivisionInfo,\n    SetZoneAndDivision\n  } = useInitialContext(); // Accessing zone and division data from context\n  const {\n    zoneAndDivisionData\n  } = useInitialContext();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log(\"Form Data:\", JSON.stringify(formData, null, 2));\n      const response = await axios.post(\"https://railwaymcq.com/student/dbfeedback_api.php\", formData);\n      console.log(\"Data added successfully:\", response.data);\n      alert(\"Data added successfully\");\n      setFormData({\n        zone: \"\",\n        division: \"\",\n        deptt: \"\",\n        message: \"\",\n        message_by: \"\"\n      });\n    } catch (error) {\n      console.error(\"Error adding data:\", error);\n    }\n  };\n  useEffect(() => {\n    // Fetch zone and division data when component mounts\n    SetZoneAndDivision();\n  }, [SetZoneAndDivision]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        name: \"zone\",\n        value: formData.zone,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Please select Zone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), zoneAndDivisionData && zoneAndDivisionData.map((zones, index) => Object.entries(zones).map(([zone], index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: zone,\n            children: zone\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 19\n          }, this);\n        }))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        name: \"division\",\n        value: formData.division,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Please select Division\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), console.log(formData.zone), zoneAndDivisionData.map(zones => {\n          Object.entries(zones).map(([zone], index) => {\n            {\n              console.log(zone === formData.zone);\n            }\n\n            // zone === formData.zone ? (\n            //   <>\n            //     {zones.map((division, index) => {\n            //       return (\n            //         <option key={index} value={division}>\n            //           {division}\n            //         </option>\n            //       );\n            //     })}\n            //   </>\n            // ) : null;\n          });\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Save Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"feedback-list\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your Feedbacks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n}\n_s(FeedBack_user, \"3UqhpwxNgKmlbPRgpjT2LOV4BS0=\", false, function () {\n  return [useInitialContext, useInitialContext];\n});\n_c = FeedBack_user;\nvar _c;\n$RefreshReg$(_c, \"FeedBack_user\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","useInitialContext","jsxDEV","_jsxDEV","ai","create","baseURL","FeedBack_user","props","_s","formData","setFormData","zone","division","deptt","message","message_by","railwayInfo","zoneAndDivisionInfo","SetZoneAndDivision","zoneAndDivisionData","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","console","log","JSON","stringify","response","post","data","alert","error","className","children","onSubmit","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","zones","index","Object","entries","type","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/project/test/src/Component/FeedBack_user.js"],"sourcesContent":["// import React, { useState, useEffect, useContext } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./feedback.css\"; // Import CSS file\r\n// import { useInitialContext } from \"../context/InitialContext\";\r\n\r\n// // Axios Instance\r\n// const ai = axios.create({\r\n//   baseURL: \"https://railwaymcq.com/student/dbfeedback_api.php\",\r\n// });\r\n\r\n// export default function FeedBack_user(props) {\r\n//   const [formData, setFormData] = useState({\r\n//     zone: \"\",\r\n//     division: \"\",\r\n//     deptt: \"\",\r\n//     message: \"\",\r\n//     message_by: \"\",\r\n//   });\r\n\r\n//   // Call the useInitialContext hook to get access to the context values\r\n//   const { railwayInfo, zoneAndDivisionInfo, SetZoneAndDivision } =\r\n//     useInitialContext();\r\n\r\n//   const { zoneAndDivisionData } = useInitialContext();\r\n\r\n//   // Access the zone and division values from the context\r\n//   const { railway_zone, railway_division } = railwayInfo;\r\n//   console.log(railwayInfo.railway_zone);\r\n\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n\r\n//     setFormData((prevState) => ({\r\n//       ...prevState,\r\n//       [name]: value,\r\n//     }));\r\n\r\n//     // Validate input\r\n//     if (name === \"name\" && value.length < 3) {\r\n//       setErrors({ ...errors, name: \"Name must be at least 3 characters long\" });\r\n//     } else if (name === \"email\" && !/\\S+@\\S+\\.\\S+/.test(value)) {\r\n//       setErrors({ ...errors, email: \"Invalid email address\" });\r\n//     } else {\r\n//       setErrors({ ...errors, [name]: \"\" });\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       console.log(\"Form Data:\", JSON.stringify(formData, null, 2));\r\n\r\n//       if (Object.values(errors).some((error) => error !== \"\")) {\r\n//         alert(\"Please fix the errors before submitting the form\");\r\n//         return;\r\n//       }\r\n//       const response = await axios.post(\r\n//         \"https://railwaymcq.com/student/dbfeedback_api.php\",\r\n//         formData\r\n//       );\r\n//       // const response = await ai.post(\"\", formData);\r\n//       console.log(\"Data added successfully:\", response.data);\r\n//       // Clear form fields after successful submission\r\n//       setFormData({\r\n//         zone: \"\",\r\n//         division: \"\",\r\n//         deptt: \"\",\r\n//         message: \"\",\r\n//         message_by: \"\",\r\n//       });\r\n//     } catch (error) {\r\n//       console.error(\"Error adding data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // for fetch data from backend start\r\n//   const [getFeedback, setFeedback] = useState([]);\r\n\r\n//   const getAllFeedback = async () => {\r\n//     try {\r\n//       const Feedbackdata = await ai.get(\"/Feedback/list/\");\r\n//       setFeedback(Feedbackdata.data);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   const handleOptionClick = (value) => {\r\n//     console.log(\"Selected option:\", value);\r\n//     // You can add your logic here for handling the selected option\r\n//   };\r\n\r\n//   //use context\r\n\r\n//   <select onChange={(e) => handleZoneChange(e)} value={selectedZone}>\r\n//     <option value=\"\">Select Zone</option>\r\n//     {zoneAndDivisionData &&\r\n//       Object.entries(zoneAndDivisionData).map(([zone, divisions]) => (\r\n//         <option key={zone} value={zone}>\r\n//           {zone}\r\n//         </option>\r\n//       ))}\r\n//   </select>;\r\n\r\n//   const handleZoneChange = (e) => {\r\n//     const selectedZone = e.target.value;\r\n//     setSelectedZone(selectedZone);\r\n//     setSelectedDivision(\"\"); // Reset division when zone changes\r\n\r\n//     <select\r\n//       onChange={(e) => setSelectedDivision(e.target.value)}\r\n//       value={selectedDivision}\r\n//     >\r\n//       <option value=\"\">Select Division</option>\r\n//       {selectedZone &&\r\n//         zoneAndDivisionData[selectedZone].map((division) => (\r\n//           <option key={division} value={division}>\r\n//             {division}\r\n//           </option>\r\n//         ))}\r\n//     </select>;\r\n\r\n//     // end of useContext............\r\n//   };\r\n//   useEffect(() => {\r\n//     getAllFeedback();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"feedback-container\">\r\n//       <form onSubmit={handleSubmit}>\r\n//         <h6>{props.heading}</h6>\r\n\r\n//         <select\r\n//           className=\"form-select\"\r\n//           name=\"zone\"\r\n//           value={formData.zone}\r\n//           onChange={handleChange}\r\n//         >\r\n//           <option value=\"\">Please select Zone</option>\r\n//           <option value=\"WCR\">WCR</option>\r\n//           <option value=\"ECR\">ECR</option>\r\n//           <option value=\"NCR\">NCR</option>\r\n//         </select>\r\n\r\n//         <select\r\n//           className=\"form-select\"\r\n//           name=\"division\"\r\n//           value={formData.division}\r\n//           onChange={handleChange}\r\n//         >\r\n//           <option>Please select Division</option>\r\n//           <option value=\"JBP\">Jabalpur</option>\r\n//           <option value=\"KOTA\">Kota</option>\r\n//           <option value=\"BPL\">Bhopal</option>\r\n//         </select>\r\n\r\n//         <select\r\n//           className=\"form-select\"\r\n//           name=\"deptt\"\r\n//           value={formData.deptt}\r\n//           onChange={handleChange}\r\n//         >\r\n//           <option>Please select Department</option>\r\n//           <option value=\"GEN. ELECTRICAL\">GEN. ELECTRICAL</option>\r\n//           <option value=\"TRD\">TRD</option>\r\n//           <option value=\"TRS\">TRS</option>\r\n//         </select>\r\n//         <label htmlFor=\"mybox\" className=\"form-label\">\r\n//           <strong>Please feel free to leave any Feedback here</strong>\r\n//         </label>\r\n//         <textarea\r\n//           type=\"text\"\r\n//           name=\"message\"\r\n//           value={formData.message}\r\n//           onChange={handleChange}\r\n//           className=\"form-control\"\r\n//           id=\"myBox\"\r\n//           rows=\"4\"\r\n//           col=\"8\"\r\n//         ></textarea>\r\n\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"custom-textbox\" // Apply custom class for styling\r\n//           name=\"message_by\"\r\n//           value={formData.message_by}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Enter your good name please...\"\r\n//           // placeholder={a.name}\r\n//         />\r\n\r\n//         <button type=\"submit\" className=\"btn btn-primary\">\r\n//           Save Feedback\r\n//         </button>\r\n//         <ul className=\"feedback-list\">\r\n//           <h4>Your Feedbacks</h4>\r\n//           {getFeedback.map((item) => (\r\n//             <li key={item.id}>\r\n//               {item.zone} - {item.division} - {item.deptt} - {item.message} -{\" \"}\r\n//               {item.date} -{item.message_by}\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./feedback.css\"; // Import CSS file\r\nimport { useInitialContext } from \"../context/InitialContext\";\r\n\r\n// Axios Instance\r\nconst ai = axios.create({\r\n  baseURL: \"https://railwaymcq.com/student/dbfeedback_api.php\",\r\n});\r\n\r\nexport default function FeedBack_user(props) {\r\n  const [formData, setFormData] = useState({\r\n    zone: \"\",\r\n    division: \"\",\r\n    deptt: \"\",\r\n    message: \"\",\r\n    message_by: \"\",\r\n  });\r\n\r\n  const { railwayInfo, zoneAndDivisionInfo, SetZoneAndDivision } =\r\n    useInitialContext(); // Accessing zone and division data from context\r\n  const { zoneAndDivisionData } = useInitialContext();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      console.log(\"Form Data:\", JSON.stringify(formData, null, 2));\r\n\r\n      const response = await axios.post(\r\n        \"https://railwaymcq.com/student/dbfeedback_api.php\",\r\n        formData\r\n      );\r\n      console.log(\"Data added successfully:\", response.data);\r\n      alert(\"Data added successfully\");\r\n      setFormData({\r\n        zone: \"\",\r\n        division: \"\",\r\n        deptt: \"\",\r\n        message: \"\",\r\n        message_by: \"\",\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error adding data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch zone and division data when component mounts\r\n    SetZoneAndDivision();\r\n  }, [SetZoneAndDivision]);\r\n\r\n  return (\r\n    <div className=\"feedback-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h6>{props.heading}</h6>\r\n        <select\r\n          className=\"form-select\"\r\n          name=\"zone\"\r\n          value={formData.zone}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"\">Please select Zone</option>\r\n          {zoneAndDivisionData &&\r\n            zoneAndDivisionData.map((zones, index) =>\r\n              Object.entries(zones).map(([zone], index) => {\r\n                return (\r\n                  <option key={index} value={zone}>\r\n                    {zone}\r\n                  </option>\r\n                );\r\n              })\r\n            )}\r\n        </select>\r\n\r\n        <select\r\n          className=\"form-select\"\r\n          name=\"division\"\r\n          value={formData.division}\r\n          onChange={handleChange}\r\n        >\r\n          <option>Please select Division</option>\r\n          {console.log(formData.zone)}\r\n          {zoneAndDivisionData.map((zones) => {\r\n            Object.entries(zones).map(([zone], index) => {\r\n              {\r\n                console.log(zone === formData.zone);\r\n              }\r\n\r\n              // zone === formData.zone ? (\r\n              //   <>\r\n              //     {zones.map((division, index) => {\r\n              //       return (\r\n              //         <option key={index} value={division}>\r\n              //           {division}\r\n              //         </option>\r\n              //       );\r\n              //     })}\r\n              //   </>\r\n              // ) : null;\r\n            });\r\n          })}\r\n        </select>\r\n\r\n        {/* Other form inputs */}\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Save Feedback\r\n        </button>\r\n\r\n        {/* Displaying feedback list */}\r\n        <ul className=\"feedback-list\">\r\n          <h4>Your Feedbacks</h4>\r\n          {/* Map through getFeedback array and display feedback items */}\r\n        </ul>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB,CAAC,CAAC;AACzB,SAASC,iBAAiB,QAAQ,2BAA2B;;AAE7D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,EAAE,GAAGJ,KAAK,CAACK,MAAM,CAAC;EACtBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,eAAe,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC;IACvCe,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,MAAM;IAAEC,WAAW;IAAEC,mBAAmB;IAAEC;EAAmB,CAAC,GAC5DlB,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACvB,MAAM;IAAEmB;EAAoB,CAAC,GAAGnB,iBAAiB,CAAC,CAAC;EAEnD,MAAMoB,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAEhCd,WAAW,CAAEe,SAAS,KAAM;MAC1B,GAAGA,SAAS;MACZ,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACtB,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MAE5D,MAAMuB,QAAQ,GAAG,MAAMjC,KAAK,CAACkC,IAAI,CAC/B,mDAAmD,EACnDxB,QACF,CAAC;MACDmB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEG,QAAQ,CAACE,IAAI,CAAC;MACtDC,KAAK,CAAC,yBAAyB,CAAC;MAChCzB,WAAW,CAAC;QACVC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAEDvC,SAAS,CAAC,MAAM;IACd;IACAqB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACA,kBAAkB,CAAC,CAAC;EAExB,oBACEhB,OAAA;IAAKmC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjCpC,OAAA;MAAMqC,QAAQ,EAAEb,YAAa;MAAAY,QAAA,gBAC3BpC,OAAA;QAAAoC,QAAA,EAAK/B,KAAK,CAACiC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxB1C,OAAA;QACEmC,SAAS,EAAC,aAAa;QACvBf,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEd,QAAQ,CAACE,IAAK;QACrBkC,QAAQ,EAAEzB,YAAa;QAAAkB,QAAA,gBAEvBpC,OAAA;UAAQqB,KAAK,EAAC,EAAE;UAAAe,QAAA,EAAC;QAAkB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC3CzB,mBAAmB,IAClBA,mBAAmB,CAAC2B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KACnCC,MAAM,CAACC,OAAO,CAACH,KAAK,CAAC,CAACD,GAAG,CAAC,CAAC,CAACnC,IAAI,CAAC,EAAEqC,KAAK,KAAK;UAC3C,oBACE9C,OAAA;YAAoBqB,KAAK,EAAEZ,IAAK;YAAA2B,QAAA,EAC7B3B;UAAI,GADMqC,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CAAC;QAEb,CAAC,CACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAET1C,OAAA;QACEmC,SAAS,EAAC,aAAa;QACvBf,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEd,QAAQ,CAACG,QAAS;QACzBiC,QAAQ,EAAEzB,YAAa;QAAAkB,QAAA,gBAEvBpC,OAAA;UAAAoC,QAAA,EAAQ;QAAsB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACtChB,OAAO,CAACC,GAAG,CAACpB,QAAQ,CAACE,IAAI,CAAC,EAC1BQ,mBAAmB,CAAC2B,GAAG,CAAEC,KAAK,IAAK;UAClCE,MAAM,CAACC,OAAO,CAACH,KAAK,CAAC,CAACD,GAAG,CAAC,CAAC,CAACnC,IAAI,CAAC,EAAEqC,KAAK,KAAK;YAC3C;cACEpB,OAAO,CAACC,GAAG,CAAClB,IAAI,KAAKF,QAAQ,CAACE,IAAI,CAAC;YACrC;;YAEA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;MAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAIT1C,OAAA;QAAQiD,IAAI,EAAC,QAAQ;QAACd,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAElD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAGT1C,OAAA;QAAImC,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC3BpC,OAAA;UAAAoC,QAAA,EAAI;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAErB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACpC,EAAA,CApHuBF,aAAa;EAAA,QAUjCN,iBAAiB,EACaA,iBAAiB;AAAA;AAAAoD,EAAA,GAX3B9C,aAAa;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}