{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\project\\\\test\\\\src\\\\Component\\\\Quiz1.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport \"../Component/css/Quiz1.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Quiz1() {\n  _s();\n  const [quizData, setQuizData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [score, setScore] = useState(0);\n  const location = useLocation();\n  const {\n    state: receivedData\n  } = location;\n  useEffect(() => {\n    const fetchQuizData = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(`https://railwaymcq.com/student/mcq_api.php?topicCode=${receivedData === null || receivedData === void 0 ? void 0 : receivedData.topicCode}&difficultyLevel=${receivedData === null || receivedData === void 0 ? void 0 : receivedData.difficulty}&subjectcode=${receivedData === null || receivedData === void 0 ? void 0 : receivedData.subjectcode}`);\n        setQuizData(response.data);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n        console.error(\"Error fetching quiz data:\", error);\n      }\n    };\n    fetchQuizData();\n  }, [receivedData]);\n  const handleOptionSelect = (questionId, selectedOption) => {\n    setUserAnswers({\n      ...userAnswers,\n      [questionId]: selectedOption\n    });\n  };\n  const handleSubmit = () => {\n    let totalScore = 0;\n    quizData.forEach(question => {\n      if (userAnswers[question.qcode] === question.answer.trim()) {\n        totalScore++;\n      }\n    });\n    setScore(totalScore);\n  };\n  const handleGoBack = () => {\n    // Check if there's a state object in the location\n    if (location.state && location.state.from) {\n      // Use the state object to navigate back\n      window.location = location.state.from.pathname;\n    } else {\n      // If there's no state, go back to the previous page in history\n      window.history.back();\n    }\n  };\n  const getColorForOption = (option, questionId) => {\n    if (userAnswers[questionId] === option) {\n      if (option === quizData.find(question => question.qcode === questionId).answer.trim()) {\n        return \"green\";\n      } else {\n        return \"red\";\n      }\n    }\n    return \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"quiz-heading\",\n      children: [\"Quiz Attended by: \", receivedData === null || receivedData === void 0 ? void 0 : receivedData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LODING.........\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: quizData.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [quizData.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"question-number\",\n            children: [\"Q\", index + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"question-text\",\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"options-list\",\n            children: [question.option1, question.option2, question.option3, question.option4].map((option, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"option-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: `${question.qcode}_option${idx + 1}`,\n                name: question.qcode,\n                value: option,\n                checked: userAnswers[question.qcode] === option,\n                onChange: () => handleOptionSelect(question.qcode, option)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `${question.qcode}_option${idx + 1}`,\n                className: `option-label ${getColorForOption(option, question.qcode)}`,\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 25\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this)]\n        }, question.qcode, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"submit-button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"score-text\",\n          children: [\"Your Score: \", score, \"/\", quizData.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-quiz-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"no-quiz-text\",\n          children: \"Sorry! Currently, there are no quizzes available for this topic.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"go-back-button\",\n          onClick: handleGoBack,\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz1, \"b+xngDIJtXqCIP4S2RnIUc1Q6yY=\", false, function () {\n  return [useLocation];\n});\n_c = Quiz1;\nexport default Quiz1;\nvar _c;\n$RefreshReg$(_c, \"Quiz1\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz1","_s","quizData","setQuizData","loading","setLoading","userAnswers","setUserAnswers","score","setScore","location","state","receivedData","fetchQuizData","response","get","topicCode","difficulty","subjectcode","data","error","console","handleOptionSelect","questionId","selectedOption","handleSubmit","totalScore","forEach","question","qcode","answer","trim","handleGoBack","from","window","pathname","history","back","getColorForOption","option","find","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","option1","option2","option3","option4","idx","type","id","value","checked","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/project/test/src/Component/Quiz1.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport \"../Component/css/Quiz1.css\";\r\n\r\nfunction Quiz1() {\r\n  const [quizData, setQuizData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [userAnswers, setUserAnswers] = useState({});\r\n  const [score, setScore] = useState(0);\r\n  const location = useLocation();\r\n  const { state: receivedData } = location;\r\n\r\n  useEffect(() => {\r\n    const fetchQuizData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(\r\n          `https://railwaymcq.com/student/mcq_api.php?topicCode=${receivedData?.topicCode}&difficultyLevel=${receivedData?.difficulty}&subjectcode=${receivedData?.subjectcode}`\r\n        );\r\n        setQuizData(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setLoading(false);\r\n        console.error(\"Error fetching quiz data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchQuizData();\r\n  }, [receivedData]);\r\n\r\n  const handleOptionSelect = (questionId, selectedOption) => {\r\n    setUserAnswers({ ...userAnswers, [questionId]: selectedOption });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let totalScore = 0;\r\n    quizData.forEach((question) => {\r\n      if (userAnswers[question.qcode] === question.answer.trim()) {\r\n        totalScore++;\r\n      }\r\n    });\r\n    setScore(totalScore);\r\n  };\r\n  const handleGoBack = () => {\r\n    // Check if there's a state object in the location\r\n    if (location.state && location.state.from) {\r\n      // Use the state object to navigate back\r\n      window.location = location.state.from.pathname;\r\n    } else {\r\n      // If there's no state, go back to the previous page in history\r\n      window.history.back();\r\n    }\r\n  };\r\n  const getColorForOption = (option, questionId) => {\r\n    if (userAnswers[questionId] === option) {\r\n      if (\r\n        option ===\r\n        quizData.find((question) => question.qcode === questionId).answer.trim()\r\n      ) {\r\n        return \"green\";\r\n      } else {\r\n        return \"red\";\r\n      }\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <h1 className=\"quiz-heading\">Quiz Attended by: {receivedData?.name}</h1>\r\n      {loading ? (\r\n        <h1>LODING.........</h1>\r\n      ) : (\r\n        <>\r\n          {quizData.length ? (\r\n            <>\r\n              {quizData.map((question, index) => (\r\n                <div key={question.qcode} className=\"question-box\">\r\n                  <h3 className=\"question-number\">Q{index + 1}:</h3>\r\n                  <h3 className=\"question-text\">{question.question}</h3>\r\n                  <ul className=\"options-list\">\r\n                    {[\r\n                      question.option1,\r\n                      question.option2,\r\n                      question.option3,\r\n                      question.option4,\r\n                    ].map((option, idx) => (\r\n                      <li key={idx} className=\"option-item\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          id={`${question.qcode}_option${idx + 1}`}\r\n                          name={question.qcode}\r\n                          value={option}\r\n                          checked={userAnswers[question.qcode] === option}\r\n                          onChange={() =>\r\n                            handleOptionSelect(question.qcode, option)\r\n                          }\r\n                        />\r\n                        <label\r\n                          htmlFor={`${question.qcode}_option${idx + 1}`}\r\n                          className={`option-label ${getColorForOption(\r\n                            option,\r\n                            question.qcode\r\n                          )}`}\r\n                        >\r\n                          {option}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                  {/* <p className=\"correct-answer\">\r\n                Correct Answer: {question.answer}\r\n              </p> */}\r\n                </div>\r\n              ))}\r\n              <button onClick={handleSubmit} className=\"submit-button\">\r\n                Submit\r\n              </button>\r\n              <strong className=\"score-text\">\r\n                Your Score: {score}/{quizData.length}\r\n              </strong>\r\n            </>\r\n          ) : (\r\n            <div className=\"no-quiz-container\">\r\n              <h4 className=\"no-quiz-text\">\r\n                Sorry! Currently, there are no quizzes available for this topic.\r\n              </h4>\r\n              <button className=\"go-back-button\" onClick={handleGoBack}>\r\n                Go Back\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}