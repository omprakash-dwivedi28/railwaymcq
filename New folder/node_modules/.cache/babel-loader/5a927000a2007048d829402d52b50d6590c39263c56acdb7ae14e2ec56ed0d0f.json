{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{useLocation}from\"react-router-dom\";import\"../Component/css/Quiz1.css\";import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";function Quiz1(){const[quizData,setQuizData]=useState([]);const[loading,setLoading]=useState(false);const[userAnswers,setUserAnswers]=useState({});const[score,setScore]=useState(0);const location=useLocation();const{state:receivedData}=location;useEffect(()=>{const fetchQuizData=async()=>{setLoading(true);try{const response=await axios.get(\"https://railwaymcq.com/student/mcq_api.php?topicCode=\".concat(receivedData===null||receivedData===void 0?void 0:receivedData.topicCode,\"&difficultyLevel=\").concat(receivedData===null||receivedData===void 0?void 0:receivedData.difficulty,\"&subjectcode=\").concat(receivedData===null||receivedData===void 0?void 0:receivedData.subjectcode));setQuizData(response.data);setLoading(false);}catch(error){setLoading(false);console.error(\"Error fetching quiz data:\",error);}};fetchQuizData();},[receivedData]);const handleOptionSelect=(questionId,selectedOption)=>{setUserAnswers({...userAnswers,[questionId]:selectedOption});};const handleSubmit=()=>{let totalScore=0;quizData.forEach(question=>{if(userAnswers[question.qcode]===question.answer.trim()){totalScore++;}});setScore(totalScore);};const handleGoBack=()=>{// Check if there's a state object in the location\nif(location.state&&location.state.from){// Use the state object to navigate back\nwindow.location=location.state.from.pathname;}else{// If there's no state, go back to the previous page in history\nwindow.history.back();}};const getColorForOption=(option,questionId)=>{if(userAnswers[questionId]===option){if(option===quizData.find(question=>question.qcode===questionId).answer.trim()){return\"green\";}else{return\"red\";}}return\"\";};return/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-container\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"quiz-heading\",children:[\"Quiz Attended by: \",receivedData===null||receivedData===void 0?void 0:receivedData.name]}),loading?/*#__PURE__*/_jsx(\"h1\",{children:\"LOADING.........\"}):/*#__PURE__*/_jsx(_Fragment,{children:quizData.length?/*#__PURE__*/_jsxs(_Fragment,{children:[quizData.map((question,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"question-box\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"question-number\",children:[\"Q\",index+1,\":\"]}),/*#__PURE__*/_jsx(\"h3\",{className:\"question-text\",children:question.question}),/*#__PURE__*/_jsx(\"ul\",{className:\"options-list\",children:[question.option1,question.option2,question.option3,question.option4].map((option,idx)=>/*#__PURE__*/_jsxs(\"li\",{className:\"option-item\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"\".concat(question.qcode,\"_option\").concat(idx+1),name:question.qcode,value:option,checked:userAnswers[question.qcode]===option,onChange:()=>handleOptionSelect(question.qcode,option)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"\".concat(question.qcode,\"_option\").concat(idx+1),className:\"option-label \".concat(getColorForOption(option,question.qcode)),children:option})]},idx))})]},question.qcode)),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,className:\"submit-button\",children:\"Submit\"}),/*#__PURE__*/_jsxs(\"strong\",{className:\"score-text\",children:[\"Your Score: \",score,\"/\",quizData.length]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-quiz-container\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"no-quiz-text\",children:\"Sorry! Currently, there are no quizzes available for this topic.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"go-back-button\",onClick:handleGoBack,children:\"Go Back\"})]})})]});}export default Quiz1;","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","Quiz1","quizData","setQuizData","loading","setLoading","userAnswers","setUserAnswers","score","setScore","location","state","receivedData","fetchQuizData","response","get","concat","topicCode","difficulty","subjectcode","data","error","console","handleOptionSelect","questionId","selectedOption","handleSubmit","totalScore","forEach","question","qcode","answer","trim","handleGoBack","from","window","pathname","history","back","getColorForOption","option","find","className","children","name","length","map","index","option1","option2","option3","option4","idx","type","id","value","checked","onChange","htmlFor","onClick"],"sources":["C:/Users/hp/Desktop/project/test/src/Component/Quiz1.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport \"../Component/css/Quiz1.css\";\r\n\r\nfunction Quiz1() {\r\n  const [quizData, setQuizData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [userAnswers, setUserAnswers] = useState({});\r\n  const [score, setScore] = useState(0);\r\n  const location = useLocation();\r\n  const { state: receivedData } = location;\r\n\r\n  useEffect(() => {\r\n    const fetchQuizData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(\r\n          `https://railwaymcq.com/student/mcq_api.php?topicCode=${receivedData?.topicCode}&difficultyLevel=${receivedData?.difficulty}&subjectcode=${receivedData?.subjectcode}`\r\n        );\r\n        setQuizData(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setLoading(false);\r\n        console.error(\"Error fetching quiz data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchQuizData();\r\n  }, [receivedData]);\r\n\r\n  const handleOptionSelect = (questionId, selectedOption) => {\r\n    setUserAnswers({ ...userAnswers, [questionId]: selectedOption });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let totalScore = 0;\r\n    quizData.forEach((question) => {\r\n      if (userAnswers[question.qcode] === question.answer.trim()) {\r\n        totalScore++;\r\n      }\r\n    });\r\n    setScore(totalScore);\r\n  };\r\n  const handleGoBack = () => {\r\n    // Check if there's a state object in the location\r\n    if (location.state && location.state.from) {\r\n      // Use the state object to navigate back\r\n      window.location = location.state.from.pathname;\r\n    } else {\r\n      // If there's no state, go back to the previous page in history\r\n      window.history.back();\r\n    }\r\n  };\r\n  const getColorForOption = (option, questionId) => {\r\n    if (userAnswers[questionId] === option) {\r\n      if (\r\n        option ===\r\n        quizData.find((question) => question.qcode === questionId).answer.trim()\r\n      ) {\r\n        return \"green\";\r\n      } else {\r\n        return \"red\";\r\n      }\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <h1 className=\"quiz-heading\">Quiz Attended by: {receivedData?.name}</h1>\r\n      {loading ? (\r\n        <h1>LOADING.........</h1>\r\n      ) : (\r\n        <>\r\n          {quizData.length ? (\r\n            <>\r\n              {quizData.map((question, index) => (\r\n                <div key={question.qcode} className=\"question-box\">\r\n                  <h3 className=\"question-number\">Q{index + 1}:</h3>\r\n                  <h3 className=\"question-text\">{question.question}</h3>\r\n                  <ul className=\"options-list\">\r\n                    {[\r\n                      question.option1,\r\n                      question.option2,\r\n                      question.option3,\r\n                      question.option4,\r\n                    ].map((option, idx) => (\r\n                      <li key={idx} className=\"option-item\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          id={`${question.qcode}_option${idx + 1}`}\r\n                          name={question.qcode}\r\n                          value={option}\r\n                          checked={userAnswers[question.qcode] === option}\r\n                          onChange={() =>\r\n                            handleOptionSelect(question.qcode, option)\r\n                          }\r\n                        />\r\n                        <label\r\n                          htmlFor={`${question.qcode}_option${idx + 1}`}\r\n                          className={`option-label ${getColorForOption(\r\n                            option,\r\n                            question.qcode\r\n                          )}`}\r\n                        >\r\n                          {option}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                  {/* <p className=\"correct-answer\">\r\n                Correct Answer: {question.answer}\r\n              </p> */}\r\n                </div>\r\n              ))}\r\n              <button onClick={handleSubmit} className=\"submit-button\">\r\n                Submit\r\n              </button>\r\n              <strong className=\"score-text\">\r\n                Your Score: {score}/{quizData.length}\r\n              </strong>\r\n            </>\r\n          ) : (\r\n            <div className=\"no-quiz-container\">\r\n              <h4 className=\"no-quiz-text\">\r\n                Sorry! Currently, there are no quizzes available for this topic.\r\n              </h4>\r\n              <button className=\"go-back-button\" onClick={handleGoBack}>\r\n                Go Back\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}