{"ast":null,"code":"// import React from \"react\";\n// const initial_reducer = (state, action) => {\n//   // loading zone and division\n//   if (action.type === \"GET_ZONE_AND_DIVISION_INFO_BEGIN\") {\n//     return { ...state, zoneAndDivisionLoading: true };\n//   }\n//   if (action.type === \"GET_ZONE_AND_DIVISION_INFO_SUCCESS\") {\n//     // console.log(\"im fro globl context \", action.payload);\n//     const data = action.payload;\n//     return {\n//       ...state,\n//       zoneAndDivisionLoading: false,\n//       zoneAndDivisionData: data, // to insert data in mast_info []\n//     };\n//   }\n//   if (action.type === \"GET_ZONE_AND_DIVISION_INFO_ERROR\") {\n//     return {\n//       ...state,\n//       zoneAndDivisionLoading: false,\n//       zoneAndDivisionError: true,\n//     };\n//   }\n//   if (action.type === \"ZONE\") {\n//     const ZONE = action.payload.value;\n//     return {\n//       ...state,\n//       railwayInfo: {\n//         ...state.railwayInfo,\n//         railway_zone: ZONE,\n//         railway_division: null,\n//       },\n//     };\n//   }\n//   if (action.type === \"DIVISION\") {\n//     const DIVISION = action.payload.value;\n//     return {\n//       ...state,\n//       railwayInfo: { ...state.railwayInfo, railway_division: DIVISION },\n//     };\n//   }\n//   throw new Error(`No Matching \"${action.type}\" - action type`);\n// };\n// export default initial_reducer;\nconst initial_reducer=(state,action)=>{if(action.type===\"GET_ZONE_AND_DIVISION_INFO_BEGIN\"){return{...state,zoneAndDivisionLoading:true};}else if(action.type===\"GET_ZONE_AND_DIVISION_INFO_SUCCESS\"){return{...state,zoneAndDivisionLoading:false,zoneAndDivisionData:action.payload};}else if(action.type===\"GET_ZONE_AND_DIVISION_INFO_ERROR\"){return{...state,zoneAndDivisionLoading:false,zoneAndDivisionError:true};}else if(action.type===\"GET_DEPARTMENT_INFO_BEGIN\"){return{...state,departmentLoading:true};}else if(action.type===\"GET_DEPARTMENT_INFO_SUCCESS\"){return{...state,departmentLoading:false,departmentData:action.payload};}else if(action.type===\"GET_DEPARTMENT_INFO_ERROR\"){return{...state,departmentLoading:false,departmentError:true};}else if(action.type===\"ZONE\"){const ZONE=action.payload.value;return{...state,railwayInfo:{...state.railwayInfo,railway_zone:ZONE,railway_division:null}};}else if(action.type===\"DIVISION\"){const DIVISION=action.payload.value;return{...state,railwayInfo:{...state.railwayInfo,railway_division:DIVISION}};}else{throw new Error(\"No Matching \\\"\".concat(action.type,\"\\\" - action type\"));}};export default initial_reducer;","map":{"version":3,"names":["initial_reducer","state","action","type","zoneAndDivisionLoading","zoneAndDivisionData","payload","zoneAndDivisionError","departmentLoading","departmentData","departmentError","ZONE","value","railwayInfo","railway_zone","railway_division","DIVISION","Error","concat"],"sources":["C:/Users/hp/Desktop/project/test/src/context/initial_reducer.js"],"sourcesContent":["// import React from \"react\";\r\n\r\n// const initial_reducer = (state, action) => {\r\n//   // loading zone and division\r\n\r\n//   if (action.type === \"GET_ZONE_AND_DIVISION_INFO_BEGIN\") {\r\n//     return { ...state, zoneAndDivisionLoading: true };\r\n//   }\r\n//   if (action.type === \"GET_ZONE_AND_DIVISION_INFO_SUCCESS\") {\r\n//     // console.log(\"im fro globl context \", action.payload);\r\n//     const data = action.payload;\r\n\r\n//     return {\r\n//       ...state,\r\n//       zoneAndDivisionLoading: false,\r\n//       zoneAndDivisionData: data, // to insert data in mast_info []\r\n//     };\r\n//   }\r\n//   if (action.type === \"GET_ZONE_AND_DIVISION_INFO_ERROR\") {\r\n//     return {\r\n//       ...state,\r\n//       zoneAndDivisionLoading: false,\r\n//       zoneAndDivisionError: true,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"ZONE\") {\r\n//     const ZONE = action.payload.value;\r\n\r\n//     return {\r\n//       ...state,\r\n//       railwayInfo: {\r\n//         ...state.railwayInfo,\r\n//         railway_zone: ZONE,\r\n//         railway_division: null,\r\n//       },\r\n//     };\r\n//   }\r\n//   if (action.type === \"DIVISION\") {\r\n//     const DIVISION = action.payload.value;\r\n//     return {\r\n//       ...state,\r\n//       railwayInfo: { ...state.railwayInfo, railway_division: DIVISION },\r\n//     };\r\n//   }\r\n//   throw new Error(`No Matching \"${action.type}\" - action type`);\r\n// };\r\n// export default initial_reducer;\r\n\r\nconst initial_reducer = (state, action) => {\r\n  if (action.type === \"GET_ZONE_AND_DIVISION_INFO_BEGIN\") {\r\n    return { ...state, zoneAndDivisionLoading: true };\r\n  } else if (action.type === \"GET_ZONE_AND_DIVISION_INFO_SUCCESS\") {\r\n    return {\r\n      ...state,\r\n      zoneAndDivisionLoading: false,\r\n      zoneAndDivisionData: action.payload,\r\n    };\r\n  } else if (action.type === \"GET_ZONE_AND_DIVISION_INFO_ERROR\") {\r\n    return {\r\n      ...state,\r\n      zoneAndDivisionLoading: false,\r\n      zoneAndDivisionError: true,\r\n    };\r\n  } else if (action.type === \"GET_DEPARTMENT_INFO_BEGIN\") {\r\n    return { ...state, departmentLoading: true };\r\n  } else if (action.type === \"GET_DEPARTMENT_INFO_SUCCESS\") {\r\n    return {\r\n      ...state,\r\n      departmentLoading: false,\r\n      departmentData: action.payload,\r\n    };\r\n  } else if (action.type === \"GET_DEPARTMENT_INFO_ERROR\") {\r\n    return { ...state, departmentLoading: false, departmentError: true };\r\n  } else if (action.type === \"ZONE\") {\r\n    const ZONE = action.payload.value;\r\n    return {\r\n      ...state,\r\n      railwayInfo: {\r\n        ...state.railwayInfo,\r\n        railway_zone: ZONE,\r\n        railway_division: null,\r\n      },\r\n    };\r\n  } else if (action.type === \"DIVISION\") {\r\n    const DIVISION = action.payload.value;\r\n    return {\r\n      ...state,\r\n      railwayInfo: { ...state.railwayInfo, railway_division: DIVISION },\r\n    };\r\n  } else {\r\n    throw new Error(`No Matching \"${action.type}\" - action type`);\r\n  }\r\n};\r\n\r\nexport default initial_reducer;\r\n"],"mappings":"AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,KAAM,CAAAA,eAAe,CAAGA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACzC,GAAIA,MAAM,CAACC,IAAI,GAAK,kCAAkC,CAAE,CACtD,MAAO,CAAE,GAAGF,KAAK,CAAEG,sBAAsB,CAAE,IAAK,CAAC,CACnD,CAAC,IAAM,IAAIF,MAAM,CAACC,IAAI,GAAK,oCAAoC,CAAE,CAC/D,MAAO,CACL,GAAGF,KAAK,CACRG,sBAAsB,CAAE,KAAK,CAC7BC,mBAAmB,CAAEH,MAAM,CAACI,OAC9B,CAAC,CACH,CAAC,IAAM,IAAIJ,MAAM,CAACC,IAAI,GAAK,kCAAkC,CAAE,CAC7D,MAAO,CACL,GAAGF,KAAK,CACRG,sBAAsB,CAAE,KAAK,CAC7BG,oBAAoB,CAAE,IACxB,CAAC,CACH,CAAC,IAAM,IAAIL,MAAM,CAACC,IAAI,GAAK,2BAA2B,CAAE,CACtD,MAAO,CAAE,GAAGF,KAAK,CAAEO,iBAAiB,CAAE,IAAK,CAAC,CAC9C,CAAC,IAAM,IAAIN,MAAM,CAACC,IAAI,GAAK,6BAA6B,CAAE,CACxD,MAAO,CACL,GAAGF,KAAK,CACRO,iBAAiB,CAAE,KAAK,CACxBC,cAAc,CAAEP,MAAM,CAACI,OACzB,CAAC,CACH,CAAC,IAAM,IAAIJ,MAAM,CAACC,IAAI,GAAK,2BAA2B,CAAE,CACtD,MAAO,CAAE,GAAGF,KAAK,CAAEO,iBAAiB,CAAE,KAAK,CAAEE,eAAe,CAAE,IAAK,CAAC,CACtE,CAAC,IAAM,IAAIR,MAAM,CAACC,IAAI,GAAK,MAAM,CAAE,CACjC,KAAM,CAAAQ,IAAI,CAAGT,MAAM,CAACI,OAAO,CAACM,KAAK,CACjC,MAAO,CACL,GAAGX,KAAK,CACRY,WAAW,CAAE,CACX,GAAGZ,KAAK,CAACY,WAAW,CACpBC,YAAY,CAAEH,IAAI,CAClBI,gBAAgB,CAAE,IACpB,CACF,CAAC,CACH,CAAC,IAAM,IAAIb,MAAM,CAACC,IAAI,GAAK,UAAU,CAAE,CACrC,KAAM,CAAAa,QAAQ,CAAGd,MAAM,CAACI,OAAO,CAACM,KAAK,CACrC,MAAO,CACL,GAAGX,KAAK,CACRY,WAAW,CAAE,CAAE,GAAGZ,KAAK,CAACY,WAAW,CAAEE,gBAAgB,CAAEC,QAAS,CAClE,CAAC,CACH,CAAC,IAAM,CACL,KAAM,IAAI,CAAAC,KAAK,kBAAAC,MAAA,CAAiBhB,MAAM,CAACC,IAAI,oBAAiB,CAAC,CAC/D,CACF,CAAC,CAED,cAAe,CAAAH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}